{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/bits.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/themes.js","webpack:///./src/components/layout.js","webpack:///./src/utils/selectors.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","_utils_selectors__WEBPACK_IMPORTED_MODULE_4__","_components_bits__WEBPACK_IMPORTED_MODULE_5__","styled_components__WEBPACK_IMPORTED_MODULE_6__","Container","styled","div","withConfig","displayName","componentId","Date","p","Summary","IndexPage","_ref","data","a","createElement","keywords","getPosts","map","edge","_getInfo","getInfo","node","id","title","date","excerpt","key","to","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ContentContainer","styled_components__WEBPACK_IMPORTED_MODULE_0__","theme","secondary","highlight","main","dark","action","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","header","Title","h2","Header","_ref2","siteTitle","react_default","gatsby_browser_entry","footer","bits","as","siteTheme","background","GlobalStyle","createGlobalStyle","_templateObject","Layout","_ref3","styled_components_browser_esm","layout_Container","_755544856","getSinglePost","allMarkdownRemark","edges","getId","fields","slug","getTitle","frontmatter","getDate","_ref4","markdownRemark","html"],"mappings":"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","file":"component---src-pages-index-js-bc41c37e5adaad4cdc04.js","sourcesContent":["import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport { getPosts, getInfo } from \"../utils/selectors\";\nimport { ContentContainer } from \"../components/bits\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  a {\n    font-family: \"Raleway\", sans-serif;\n    font-weight: 900;\n    font-size: 36px;\n    text-transform: uppercase;\n    text-decoration: none;\n    display: block;\n    line-height: 1;\n  }\n`;\n\nconst Date = styled.p`\n  margin: 0 0 10px;\n  font-size: 14px;\n`;\n\nconst Summary = styled.p``;\n\nconst IndexPage = ({ data }) => {\n  return (\n    <Layout>\n      <SEO\n        keywords={[\n          `matt perry, popmotion, react, pose, framer, framer motion, ui animation`\n        ]}\n      />\n      <ContentContainer>\n        {getPosts(data).map(edge => {\n          const { id, title, date, excerpt } = getInfo(edge.node);\n          return (\n            <Container key={id}>\n              <Link to={id}>{title}</Link>\n              <Date>{date}</Date>\n              <Summary>{excerpt}</Summary>\n            </Container>\n          );\n        })}\n      </ContentContainer>\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMM YYYY\")\n          }\n          excerpt\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import styled from \"styled-components\";\n\nconst verticalSpacing = \"25px\";\nconst yellow = \"#FFDE4D\";\n\nexport const ContentContainer = styled.div`\n  ${({ theme }) => `\n  > * {\n    display: block;\n    margin: 0 auto;\n    max-width: 650px;\n  }\n\n  > p {\n    margin-bottom: ${verticalSpacing};\n    line-height: 1.6;\n  }\n\n  > p:first-child {\n    font-size: 24px;\n    font-weight: 600;\n    line-height: 1.4;\n  }\n\n  h2, h3 {\n    color: ${theme.secondary};\n    text-transform: uppercase;\n    font-size: 36px;\n    margin: 50px auto ${verticalSpacing};\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  p code {\n    background: ${theme.highlight};\n    padding: 5px;\n    border-radius: 5px;\n  }\n\n  .gatsby-highlight {\n    margin-bottom ${verticalSpacing};\n    max-width: 700px;\n  }\n\n  /**\n  * xonokai theme for JavaScript, CSS and HTML\n  * based on: https://github.com/MoOx/sass-prism-theme-base by Maxime Thirouin ~ MoOx --> http://moox.fr/ , which is Loosely based on Monokai textmate theme by http://www.monokai.nl/\n  * license: MIT; http://moox.mit-license.org/\n  */\n  code[class*=\"language-\"],\n  pre[class*=\"language-\"] {\n      -moz-tab-size: 2;\n      -o-tab-size: 2;\n      tab-size: 2;\n      -webkit-hyphens: none;\n      -moz-hyphens: none;\n      -ms-hyphens: none;\n      hyphens: none;\n      white-space: pre;\n      white-space: pre-wrap;\n      word-wrap: normal;\n      font-family: Menlo, Monaco, \"Courier New\", monospace;\n      font-size: 16px;\n      color: ${theme.main};\n      text-shadow: none;\n  }\n  pre[class*=\"language-\"],\n  :not(pre)>code[class*=\"language-\"] {\n      background: ${theme.dark};\n  }\n  pre[class*=\"language-\"] {\n      padding: 15px;\n      border-radius: 5px;\n      overflow: auto;\n  }\n\n  pre[class*=\"language-\"] {\n      position: relative;\n  }\n  pre[class*=\"language-\"] code {\n      white-space: pre;\n      display: block;\n  }\n\n  :not(pre)>code[class*=\"language-\"] {\n      padding: 0.15em 0.2em 0.05em;\n      border-radius: .3em;\n      box-shadow: 1px 1px 0.3em -0.1em #000 inset;\n  }\n  .token.namespace {\n      opacity: .7;\n  }\n  .token.comment,\n  .token.prolog,\n  .token.doctype,\n  .token.cdata {\n      color: #6f705e;\n  }\n  .token.operator,\n  .token.boolean,\n  .token.number {\n      color: #a77afe;\n  }\n  .token.attr-name,\n  .token.string {\n      color: ${yellow};\n  }\n  .token.entity,\n  .token.url,\n  .language-css .token.string,\n  .style .token.string {\n      color: ${yellow};\n  }\n  .token.selector,\n  .token.inserted {\n      color: #a6e22d;\n  }\n  .token.atrule,\n  .token.attr-value,\n  .token.keyword,\n  .token.important,\n  .token.deleted {\n      color: ${theme.action};\n  }\n  .token.regex,\n  .token.statement {\n      color: #76d9e6;\n  }\n  .token.placeholder,\n  .token.variable {\n      color: #fff;\n  }\n  .token.important,\n  .token.statement,\n  .token.bold {\n      font-weight: bold;\n  }\n  .token.punctuation {\n      color: #bebec5;\n  }\n  .token.entity {\n      cursor: help;\n  }\n  .token.italic {\n      font-style: italic;\n  }\n\n  code.language-markup {\n      color: #f9f9f9;\n  }\n  code.language-markup .token.tag {\n      color: ${theme.action};\n  }\n  code.language-markup .token.attr-name {\n      color: #a6e22d;\n  }\n  code.language-markup .token.attr-value {\n      color: ${yellow};\n  }\n  code.language-markup .token.style,\n  code.language-markup .token.script {\n      color: #76d9e6;\n  }\n  code.language-markup .token.script .token.keyword {\n      color: #76d9e6;\n  }\n\n  /* Line highlight plugin */\n  pre[class*=\"language-\"][data-line] {\n      position: relative;\n      padding: 1em 0 1em 3em;\n  }\n  pre[data-line] .line-highlight {\n      position: absolute;\n      left: 0;\n      right: 0;\n      padding: 0;\n      margin-top: 1em;\n      background: rgba(255, 255, 255, 0.08);\n      pointer-events: none;\n      line-height: inherit;\n      white-space: pre;\n  }\n  pre[data-line] .line-highlight:before,\n  pre[data-line] .line-highlight[data-end]:after {\n      content: attr(data-start);\n      position: absolute;\n      top: .4em;\n      left: .6em;\n      min-width: 1em;\n      padding: 0.2em 0.5em;\n      background-color: rgba(255, 255, 255, 0.4);\n      color: black;\n      font: bold 65%/1 sans-serif;\n      height: 1em;\n      line-height: 1em;\n      text-align: center;\n      border-radius: 999px;\n      text-shadow: none;\n      box-shadow: 0 1px 1px rgba(255, 255, 255, 0.7);\n  }\n  pre[data-line] .line-highlight[data-end]:after {\n      content: attr(data-end);\n      top: auto;\n      bottom: .4em;\n  }\n`}\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { StaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang\n            }}\n            title={title || data.site.siteMetadata.title}\n            titleTemplate={\n              title ? `%s | ${data.site.siteMetadata.title}` : \"%s\"\n            }\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription\n              },\n              {\n                property: `og:title`,\n                content: title\n              },\n              {\n                property: `og:description`,\n                content: metaDescription\n              },\n              {\n                property: `og:type`,\n                content: `website`\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author\n              },\n              {\n                name: `twitter:title`,\n                content: title\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription\n              }\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `)\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: []\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string\n};\n\nexport default SEO;\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n","import { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.header`\n  margin-bottom: 100px;\n`;\n\nconst Title = styled.h2`\n  ${({ theme }) => `\n    a {\n      color: ${theme.main}\n      text-decoration: none;\n      text-transform: uppercase;\n      font-size: 28px;\n    }\n  `}\n`;\n\nconst Header = ({ siteTitle }) => (\n  <Container>\n    <Title>\n      <Link to=\"/\">{siteTitle}</Link>\n    </Title>\n  </Container>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string\n};\n\nHeader.defaultProps = {\n  siteTitle: ``\n};\n\nexport default Header;\n","import React from \"react\";\nimport { ContentContainer } from \"./bits\";\nimport styled from \"styled-components\";\n\nexport default () => <ContentContainer as=\"footer\" />;\n","export const siteTheme = {\n  background: \"#fff\",\n  main: \"#1fedcb\",\n  secondary: \"#31005C\",\n  action: \"#F5148C\",\n  highlight: \"rgba(33, 237, 203, 0.2)\",\n  dark: \"#333\"\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport Header from \"./header\";\nimport Footer from \"./footer\";\nimport styled, { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport { siteTheme } from \"./themes.js\";\nimport \"./layout.css\";\n\nconst GlobalStyle = createGlobalStyle`\n  {${({ theme }) => `\n    body {\n      padding: 10px;\n      background: linear-gradient(180deg, ${theme.main}, ${theme.secondary});\n      min-height: 100vh;\n\n      > * {\n        font-family: 'Source Sans Pro', sans-serif;\n        font-weight: 400;\n      }\n\n      a {\n        color: ${theme.action};\n      }\n  \n      h1, h1 *, h2, h2 *, h3, h4, h5, h6 {\n        font-family: 'Raleway', sans-serif;\n        font-weight: 900;\n        line-height: 0.8;\n      }\n    }\n  `}}\n`;\n\nconst Container = styled.div`\n  ${({ theme }) => `background: ${theme.background};`}\n  min-height: calc(100vh - 20px);\n  padding: 30px;\n`;\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <ThemeProvider theme={siteTheme}>\n        <Container>\n          <GlobalStyle />\n          <Header siteTitle={data.site.siteMetadata.title} />\n          {children}\n          <Footer />\n        </Container>\n      </ThemeProvider>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default Layout;\n","export const getPosts = data => data.allMarkdownRemark.edges;\n\nconst getId = ({ fields }) => fields.slug;\nconst getTitle = ({ frontmatter }) => frontmatter.title;\nconst getDate = ({ frontmatter }) => frontmatter.date;\n\nexport const getInfo = node => ({\n  id: getId(node),\n  title: getTitle(node),\n  date: getDate(node),\n  excerpt: node.excerpt\n});\n\nexport const getSinglePost = ({ markdownRemark }) => ({\n  id: getId(markdownRemark),\n  title: getTitle(markdownRemark),\n  date: getDate(markdownRemark),\n  author: markdownRemark.frontmatter.author,\n  html: markdownRemark.html\n});\n"],"sourceRoot":""}
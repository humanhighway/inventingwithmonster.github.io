{"version":3,"sources":["webpack:///./src/utils/selectors.js","webpack:///./src/pages/index.js"],"names":["getPosts","data","allMdx","edges","getId","fields","slug","getTitle","frontmatter","title","getDate","date","getDescription","description","getInfo","node","id","excerpt","getSinglePost","mdx","author","body","HomepageTitle","styled","Title","media","tablet","phone","Container","div","Date","p","Summary","IndexPage","keywords","map","edge","key","to","query"],"mappings":"8FAAA,sGAAO,IAAMA,EAAW,SAACC,GAAD,OAAUA,EAAKC,OAAOC,OAExCC,EAAQ,SAAC,GAAD,SAAGC,OAAoBC,MAC/BC,EAAW,SAAC,GAAD,SAAGC,YAA8BC,OAC5CC,EAAU,SAAC,GAAD,SAAGF,YAA8BG,MAC3CC,EAAiB,SAAC,GAAD,SAAGP,OAAoBQ,aAEjCC,EAAU,SAACC,GAAD,MAAW,CAChCC,GAAIZ,EAAMW,GACVN,MAAOF,EAASQ,GAChBJ,KAAMD,EAAQK,GACdE,QAASL,EAAeG,KAGbG,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAH,MAAc,CACzCH,GAAIZ,EAAMe,GACVV,MAAOF,EAASY,GAChBR,KAAMD,EAAQS,GACdC,OAAQD,EAAIX,YAAYY,OACxBC,KAAMF,EAAIE,KACVJ,QAASL,EAAeO,M,6rBCX1B,IAAMG,EAAgBC,YAAOC,KAAV,0EAAGD,CAAH,gCAGfE,IAAMC,OAHS,KAIfD,IAAME,MAJS,MAObC,EAAYL,IAAOM,IAAV,sEAAGN,CAAH,gLAGXE,IAAMC,OAHK,KAcTD,IAAMC,OAdG,KAeTD,IAAME,MAfG,MAmBTG,EAAOP,IAAOQ,EAAV,iEAAGR,CAAH,qCAKJS,EAAUT,IAAOQ,EAAV,oEAAGR,CAAH,uBAETE,IAAMC,OAFG,MA+BEO,UA1BG,SAAC,GAAc,IAAZhC,EAAW,EAAXA,KACnB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEiC,SAAU,CAAC,6EAIb,kBAACZ,EAAD,iCACA,kBAAC,IAAD,KACGtB,YAASC,GAAMkC,KAAI,SAACC,GAAU,IAAD,EACStB,YAAQsB,EAAKrB,MAA1CC,EADoB,EACpBA,GAAIP,EADgB,EAChBA,MAAOE,EADS,EACTA,KAAMM,EADG,EACHA,QAEzB,OACE,kBAACW,EAAD,CAAWS,IAAKrB,GACd,kBAAC,OAAD,CAAMsB,GAAItB,GAAKP,GACf,kBAACqB,EAAD,KAAOnB,GACP,kBAACqB,EAAD,KAAUf,UAWjB,IAAMsB,EAAK","file":"component---src-pages-index-js-d6b2f67ccdf0f1b2b9c8.js","sourcesContent":["export const getPosts = (data) => data.allMdx.edges;\n\nconst getId = ({ fields }) => fields.slug;\nconst getTitle = ({ frontmatter }) => frontmatter.title;\nconst getDate = ({ frontmatter }) => frontmatter.date;\nconst getDescription = ({ fields }) => fields.description;\n\nexport const getInfo = (node) => ({\n  id: getId(node),\n  title: getTitle(node),\n  date: getDate(node),\n  excerpt: getDescription(node),\n});\n\nexport const getSinglePost = ({ mdx }) => ({\n  id: getId(mdx),\n  title: getTitle(mdx),\n  date: getDate(mdx),\n  author: mdx.frontmatter.author,\n  body: mdx.body,\n  excerpt: getDescription(mdx),\n});\n","import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport { getPosts, getInfo } from \"../utils/selectors\";\nimport { ContentContainer, Title } from \"../components/bits\";\nimport styled from \"styled-components\";\nimport { media } from \"../utils/media\";\n\nconst HomepageTitle = styled(Title)`\n  margin-bottom: 100px;\n\n  ${media.tablet`margin-bottom: 70px;`}\n  ${media.phone`margin-bottom: 50px;`}\n`;\n\nconst Container = styled.div`\n  margin-bottom: 60px;\n\n  ${media.tablet`margin-bottom: 40px;`}\n\n  a {\n    font-family: \"Raleway\", sans-serif;\n    font-weight: 900;\n    font-size: 36px;\n    text-transform: uppercase;\n    text-decoration: none;\n    display: block;\n    line-height: 1;\n\n    ${media.tablet`font-size: 28px;`}\n    ${media.phone`font-size: 24px;`}\n  }\n`;\n\nconst Date = styled.p`\n  margin: 0 0 10px;\n  font-size: 14px;\n`;\n\nconst Summary = styled.p`\n  font-size: 18px;\n  ${media.tablet`font-size: 16px;`}\n`;\n\nconst IndexPage = ({ data }) => {\n  return (\n    <Layout>\n      <SEO\n        keywords={[\n          `matt perry, popmotion, react, pose, framer, framer motion, ui animation`,\n        ]}\n      />\n      <HomepageTitle>{`A blog about motion & UI`}</HomepageTitle>\n      <ContentContainer>\n        {getPosts(data).map((edge) => {\n          const { id, title, date, excerpt } = getInfo(edge.node);\n\n          return (\n            <Container key={id}>\n              <Link to={id}>{title}</Link>\n              <Date>{date}</Date>\n              <Summary>{excerpt}</Summary>\n            </Container>\n          );\n        })}\n      </ContentContainer>\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n\nexport const query = graphql`\n  query {\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMM YYYY\")\n          }\n          fields {\n            slug\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}